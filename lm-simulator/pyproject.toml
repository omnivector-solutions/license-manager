[tool.poetry]
name = "license-manager-simulator"
version = "0.3.0"
description = "The License Manager Simulator is an application that simulates output from 5 license servers for use in the development of applications which interface to the license servers."
authors = ["OmniVector Solutions <info@omnivector.solutions>"]
license = "MIT"
packages = [{ include = "lm_simulator" }]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
pydantic = "^2.8.2"
pydantic-settings = "^2.3.4"
SQLAlchemy = {extras = ["mypy"], version = "^2.0.22"}
uvicorn = "^0.30.1"
requests = "^2.27.1"
psycopg2 = "2.9.5"
yarl = "^1.9.2"
asyncpg = "^0.28"
py-buzz = "^4.1.0"

[tool.poetry.dev-dependencies]
pytest = "^6.2.4"
pytest-asyncio = "^0.15.1"
pytest-cov = "^2.12.1"
pytest-env = "^0.6.2"
pytest-random-order = "^1.0.4"
black = "^24.4.2"
flake8 = "^7.0.0"
isort = "^5.9.3"
requests = "^2.26.0"
Jinja2 = "^3.0.1"
python-dotenv = "^1.0.1"

[tool.pytest.ini_options]
addopts = "-v --random-order --cov=lm_simulator --cov-report=term-missing --cov-fail-under=85"
env = [
    "DATABASE_HOST: postgres-test",
    "DATABASE_USER: test-user",
    "DATABASE_PSWD: test-pswd",
    "DATABASE_NAME: test-db",
    "DATABASE_PORT: 5433"
]

[tool.black]
line-length = 110
src = ["lm_simulator", "tests"]

[tool.isort]
line_length = 110
src_paths = ["lm_simulator", "tests"]
multi_line_output = 3
include_trailing_comma = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
