[tool.poetry]
name = "license-manager-backend"
version = "0.10.0"
description = "Provides an API for managing license data"
authors = ["OmniVector Solutions <info@omnivector.solutions>"]
license = "MIT"
packages = [{ include = "lm_backend" }]

[tool.poetry.dependencies]
python = ">=3.8,<3.9"
fastapi = "^0.68.0"
sentry-sdk = "^1.3.1"
SQLAlchemy = "1.3.23"
jwt = {version = "^1.2.0", optional = true}
databases = "^0.4.3"
SQLAlchemy-Utils = "^0.37.8"
mangum = "^0.12.1"
loguru = "^0.5.3"

[tool.poetry.dev-dependencies]
pytest = "^6.2.4"
pytest-asyncio = "^0.15.1"
pytest-cov = "^2.12.1"
pytest-env = "^0.6.2"
pytest-freezegun = "^0.4.2"
respx = "^0.17.1"
flake8 = "^3.9.2"
isort = "^5.9.3"
pytest-random-order = "^1.0.4"
pytest-sugar = "^0.9.4"
aiosqlite = "^0.17.0"
ipython = "^7.26.0"
asgi-lifespan = "^1.0.1"
black = "^21.7b0"
alembic = "^1.6.5"
mypy = "^0.910"
sqlalchemy-stubs = "^0.4"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--random-order --cov=lm_backend --cov-report=term-missing --cov-fail-under=85"
testpaths = ["tests"]
env = [
    "LM2_DATABASE_URL = sqlite:///sqlite-testing.db",
    "LM2_LOG_LEVEL_SQL = DEBUG"
]

[tool.black]
line-length = 110
src = ["lm_backend", "tests"]

[tool.isort]
line_length = 110
src_paths = ["lm_backend", "tests"]
multi_line_output = 3
include_trailing_comma = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
