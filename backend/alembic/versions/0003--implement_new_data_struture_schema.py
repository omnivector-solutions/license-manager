"""Implement new data struture schema

Revision ID: 594b52f2c088
Revises: 5308f26e8b60
Create Date: 2023-03-22 15:57:24.239833

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "594b52f2c088"
down_revision = "5308f26e8b60"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "clusters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("client_id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("client_id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "products",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "configs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("cluster_id", sa.Integer(), nullable=False),
        sa.Column("grace_time", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cluster_id"],
            ["clusters.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "license_servers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("config_id", sa.Integer(), nullable=False),
        sa.Column("host", sa.String(), nullable=False),
        sa.Column("port", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_id"],
            ["configs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),

    )
    op.create_table(
        "features",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("config_id", sa.Integer(), nullable=False),
        sa.Column("reserved", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_id"],
            ["configs.id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "inventories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("feature_id", sa.Integer(), nullable=False),
        sa.Column("total", sa.Integer(), nullable=False),
        sa.Column("used", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["feature_id"],
            ["features.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("feature_id"),
    )
    op.create_table(
        "jobs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slurm_job_id", sa.String(), nullable=False),
        sa.Column("cluster_id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("lead_host", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cluster_id"],
            ["clusters.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "bookings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("job_id", sa.Integer(), nullable=False),
        sa.Column("feature_id", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["feature_id"],
            ["features.id"],
        ),
        sa.ForeignKeyConstraint(
            ["job_id"],
            ["jobs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("license")
    op.drop_table("booking")
    op.drop_index("ix_config_client_id", table_name="config")
    op.drop_table("config")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "config",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('config_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("product", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("features", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("license_servers", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("license_server_type", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("grace_time", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "client_id",
            sa.VARCHAR(),
            server_default=sa.text("'dummy-value'::character varying"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="config_pkey"),
        sa.UniqueConstraint("name", name="config_name_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_config_client_id", "config", ["client_id"], unique=False)
    op.create_table(
        "booking",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("job_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("product_feature", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("booked", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("lead_host", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("user_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("cluster_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("config_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["config_id"], ["config.id"], name="booking_config_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="booking_pkey"),
    )
    op.create_table(
        "license",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("product_feature", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("used", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("total", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.CheckConstraint("total >= 0", name="license_total_check"),
        sa.CheckConstraint("used <= total", name="license_check"),
        sa.CheckConstraint("used >= 0", name="license_used_check"),
        sa.PrimaryKeyConstraint("id", name="license_pkey"),
        sa.UniqueConstraint("product_feature", name="license_product_feature_key"),
    )
    op.drop_table("bookings")
    op.drop_table("jobs")
    op.drop_table("inventories")
    op.drop_table("features")
    op.drop_table("products")
    op.drop_table("license_servers")
    op.drop_table("configs")
    op.drop_table("clusters")
    # ### end Alembic commands ###
