[tool.poetry]
name = "license-manager-agent"
version = "2.2.14"
description = "Provides an agent for interacting with license manager"
authors = ["OmniVector Solutions <info@omnivector.solutions>"]
license = "MIT"
readme = "README.rst"
repository = "https://github.com/omnivector-solutions/license-manager"
documentation = "https://omnivector-solutions.github.io/license-manager/"
packages = [{ include = "lm_agent" }]

[tool.poetry.dependencies]
python = ">=3.8,<3.9"
httpx = "^0.18.2"
PyJWT = "^2.4.0"
typer = "^0.3.2"
pydantic = {version = "^1.8.2", extras = ["dotenv"]}
requests = "^2.26.0"
tabulate = "^0.8.9"
boto3 = "^1.18.17"
sentry-sdk = "^1.3.1"
py-buzz = "^2.1.3"

[tool.poetry.dev-dependencies]
pytest = "^6.2.4"
pytest-asyncio = "^0.15.1"
pytest-cov = "^2.12.1"
pytest-env = "^0.6.2"
respx = "^0.17.1"
black = "^21.7b0"
isort = "^5.9.3"
pytest-random-order = "^1.0.4"
pytest-sugar = "^0.9.4"
pytest-freezegun = "^0.4.2"
mypy = "^0.910"
types-click = "^7.1.5"
flake8 = "^3.9.2"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--random-order --cov=lm_agent --cov-report=term-missing --cov-fail-under=70"
testpaths = ["tests"]
env = [
    "LM2_AGENT_OIDC_DOMAIN = str",
    "LM2_AGENT_OIDC_AUDIENCE = str",
    "LM2_AGENT_OIDC_CLIENT_ID = str",
    "LM2_AGENT_OIDC_CLIENT_SECRET = str",
    "LM2_AGENT_BACKEND_BASE_URL = http://backend",
    "LM2_AGENT_LMUTIL_PATH = ./tests/mock_tools",
    "LM2_AGENT_RLMUTIL_PATH = ./tests/mock_tools",
    "LM2_AGENT_LOG_LEVEL = DEBUG",
]

[tool.black]
line-length = 110

[tool.isort]
line_length = 110
src_paths = ["lm_agent", "tests"]
multi_line_output = 3
include_trailing_comma = true

[[tool.mypy.overrides]]
module = [
    "buzz",
    "pkg_resources",
]
ignore_missing_imports = true

[tool.poetry.scripts]
lm-configure = "bin.lmconfigure:app"
reconcile = "lm_agent.reconcile:main"
slurmctld-prolog = "lm_agent.workload_managers.slurm.slurmctld_prolog:main"
slurmctld-epilog = "lm_agent.workload_managers.slurm.slurmctld_epilog:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
