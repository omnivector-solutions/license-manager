[tool.poetry]
name = "license-manager-agent"
version = "4.5.0a0"
description = "Provides an agent for interacting with license manager"
authors = ["OmniVector Solutions <info@omnivector.solutions>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/omnivector-solutions/license-manager"
documentation = "https://omnivector-solutions.github.io/license-manager/"
packages = [{ include = "lm_agent" }]

[tool.poetry.dependencies]
python = "^3.12"
httpx = "^0.28.1"
PyJWT = "^2.10.0"
pydantic = "^2.12"
sentry-sdk = "2.38.0"
py-buzz = "^7.3.0"
pydantic-settings = "^2.10.1"
apscheduler = "3.10.4"

[tool.poetry.group.dev.dependencies]
mypy = "^1.18.1"
pytest = "^8.2.0"
pytest-asyncio = "^1.0.0"
pytest-cov = "^7.0.0"
pytest-env = "^1.0.0"
respx = "^0.22.0"
pytest-random-order = "^1.2.0"
pytest-sugar = "^1.1.1"
ruff = "^0.13.0"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--random-order --cov=lm_agent --cov-report=term-missing --cov-fail-under=70"
testpaths = ["tests"]
env = [
    "LM_AGENT_OIDC_DOMAIN = str",
    "LM_AGENT_OIDC_CLIENT_ID = str",
    "LM_AGENT_OIDC_CLIENT_SECRET = str",
    "LM_AGENT_BACKEND_BASE_URL = http://backend",
    "LM_AGENT_LMUTIL_PATH = ./tests/mock_tools",
    "LM_AGENT_RLMUTIL_PATH = ./tests/mock_tools",
    "LM_AGENT_LSDYNA_PATH = ./tests/mock_tools",
    "LM_AGENT_LMXENDUTIL_PATH = ./tests/mock_tools",
    "LM_AGENT_OLIXTOOL_PATH = ./tests/mock_tools",
    "LM_AGENT_LOG_LEVEL = DEBUG",
]

[tool.ruff]
extend = "../ruff.toml"

[[tool.mypy.overrides]]
module = [
    "buzz",
    "pkg_resources",
    "apscheduler.*"
]
ignore_missing_imports = true

[tool.poetry.scripts]
license-manager-agent = "lm_agent.main:main"
slurmctld-prolog = "lm_agent.workload_managers.slurm.slurmctld_prolog:main"
slurmctld-epilog = "lm_agent.workload_managers.slurm.slurmctld_epilog:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
